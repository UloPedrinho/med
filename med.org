#+TITLE: My EDitor
#+TODO: CURRENT(c!) NEXT(n) BUG(b) WAITING(w!) STARTED(s!) IMPROVE(i!) TODO(t) | DONE(d!) FIXED(f!) ABORTED(a!)
#+STARTUP: indent

* TODO [3/9]
** CURRENT manage buffer as lines
:LOGBOOK:
- State "CURRENT"    from "NEXT"       [2020-01-16 ju. 13:30]
:END:
*** DONE create new file container function
:LOGBOOK:
- State "DONE"       from "STARTED"    [2020-01-31 Ven 00:17]
- State "STARTED"    from "NEXT"       [2020-01-30 Xov 23:05]
:END:
*** WAITING destroy container [0/2]
:LOGBOOK:
- State "WAITING"    from "CURRENT"    [2020-02-03 Lun 17:35]
- State "CURRENT"    from "TODO"       [2020-02-03 Lun 17:32]
:END:
- [ ] free buffer memory
- [ ] free lines memory
*** DONE load file to container [2/2]
:LOGBOOK:
- State "DONE"       from "STARTED"    [2020-01-30 Xov 00:30]
- State "STARTED"    from "TODO"       [2020-01-15 Mér 23:05]
:END:
**** DONE load file into buffer
**** DONE set buffer lines
*** DONE struct container
:LOGBOOK:
- State "DONE"       from "DONE"       [2020-01-15 Mér 22:39]
:END:
- struct:
  - BUFFER buffer
  - int length_lines;
  - int max_length_line;
  - filename
*** DONE lines use array of structs
:LOGBOOK:
- State "DONE"       from "DONE"       [2020-01-15 Mér 22:39]
:END:
- struct:
  - start : position in BUFFER first char
  - end: newline

** NEXT modify buffer when line grow-shrink
** CURRENT manage cotainers
:LOGBOOK:
- State "CURRENT"    from "NEXT"       [2020-02-03 Lun 17:35]
:END:
*** CURRENT create cointainers array(?) | pointer(?)
:LOGBOOK:
- State "CURRENT"    from "TODO"       [2020-02-03 Lun 17:35]
:END:
[[file:container.c::HERE!!!!!!!!!!!]]
*** TODO add container
*** TODO delete container
** WAITING write buffer to file
- State "WAITING"    from "TODO"       [2020-01-14 Mar 22:43]
- [ ] pass file pointer to function, better tha open&close inside ???
- [ ] test if file exist previously and pass mode
** TODO edit [0/5]
save in same space redimensioning the buffer or something ??
- [ ] enter text
- [ ] last newline must be removed
- [ ] print line to be edit
- [ ] save line (what is this?)
** TODO list lines
- [ ] numbered
- [ ] page by page
  - if 'q' , exit to main menu ?
  - or use a number type... :32L?
    - so user can enter number to be edit

** DONE load file to buffer
** DONE create/destroy buffer for free memory!!
** DONE add char/string to buffer
* IMPROVE next version
** TODO end with '.' like in vi
- better something more elaborated like vi? !q
** TODO allow buffer grow dynamically
* BUGS [1/1]
- [X] reaLine() have no memory limit
* IDEA [0/1]
- [ ] link list for lines, so when edit .. 
